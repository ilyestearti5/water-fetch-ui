@import url("https://fonts.googleapis.com/css2?family=Outfit:wght@100..900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Karla:wght@800&display=swap");
@import "./markdown.scss";
@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";
@import "tailwindcss/variants";
// append tailwind configurations
.window {
  @apply fixed inset-0 overflow-hidden;
}
// append scss files
.resize-bar {
  &.left,
  &.right {
    @apply cursor-e-resize inset-y-0 w-[3px];
  }
  &.top,
  &.bottom {
    @apply inset-x-0 h-[3px] cursor-n-resize;
  }
  &.left {
    @apply rounded-ss-lg rounded-es-lg right-full;
  }
  &.right {
    @apply rounded-ee-lg rounded-se-lg left-full;
  }
  &.top {
    @apply rounded-ss-lg rounded-se-lg bottom-full;
  }
  &.bottom {
    @apply rounded-es-lg rounded-ee-lg top-full;
  }
  .resize-overview {
    @apply fixed inset-0 z-[10000000000000];
  }
}
/* Hide the default increment and decrement arrows */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button,
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none;
  margin: 0;
}
textarea {
  text-decoration-color: transparent;
}
input {
  &[type="datetime-local"]::-webkit-calendar-picker-indicator {
    display: none;
  }
  &[type="time"]::-webkit-calendar-picker-indicator {
    display: none;
  }
  &[type="date"]::-webkit-calendar-picker-indicator {
    display: none;
  }
  &[type="month"]::-webkit-calendar-picker-indicator {
    display: none;
  }
}
input[type="number"] {
  -moz-appearance: textfield;
}
::-webkit-scrollbar {
  @apply size-[0px] bg-transparent;
}
::placeholder {
  @apply truncate;
}
* {
  @apply outline-none border-none;
}
body {
  font-family: system-ui, sans-serif;
  @apply text-sm select-none;
}
input,
textarea {
  caret-color: inherit;
  @apply bg-inherit;
}
.animate-loading {
  animation-name: animate-loading;
  animation-duration: 1.4s;
  animation-iteration-count: infinite;
  animation-direction: alternate;
}
@keyframes animate-loading {
  from {
    width: 0%;
  }
  to {
    width: 100%;
  }
}
.row {
  @apply flex items-center justify-between border border-solid border-transparent;
}
.menu {
  @apply rounded-lg border border-solid border-transparent p-1 min-w-[350px]  absolute left-full top-0 ml-1 -mt-1 shadow-lg;
}
.card {
  @apply rounded-2xl lg:w-[500px] w-[400px] h-[300px] max-sm:w-full border-solid border-transparent border shadow-lg flex flex-col;
}
.array-field {
  .items {
    @apply flex flex-wrap gap-1 mb-2;
    .item {
      @apply inline-flex gap-1 items-center border border-solid border-transparent rounded-md px-2 py-1;
    }
  }
}
video {
  @apply w-full h-full;
}
.col {
  @apply p-[2px] relative w-full flex items-center gap-2 truncate;
}
.scroll-view {
  @apply relative w-full flex flex-col h-full overflow-hidden;
  .scroll-shadow-view {
    @apply absolute inset-x-0 -top-[20px] h-[20px] transition-shadow duration-100 pointer-events-none z-[1000];
  }
}
.arrow {
  width: 15px;
  height: calc(15px / 2);
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
}
.window-dragged {
  -webkit-app-region: drag;
}
[hidden] {
  display: none !important;
}
a:focus {
  @apply outline outline-1 -outline-offset-1;
}
.styled-btn {
  @apply relative w-[250px] h-[50px] flex items-center justify-center cursor-pointer transition-transform;
}
.styled-btn:active {
  @apply scale-95;
}
.styled-btn .styled-btn-content {
  @apply absolute
  top-0
  left-0
  w-full
  h-full
  flex
  items-center
  justify-center
  bg-[#ffffff0d]
  shadow-lg
  border-y
  border-solid
  border-[#ffffff1a]
  rounded-[30px]
  p-[10px]
  tracking-[1px]
  overflow-hidden
  z-[1]
  transition-all
  duration-[0.5s]
  backdrop-blur-lg;
}
.styled-btn:hover .styled-btn-content {
  @apply tracking-[3px] text-white;
}
.styled-btn .styled-btn-content .before {
  @apply absolute
  left-0
  top-0
  w-1/2
  h-1/2
  bg-gradient-to-l
  from-[#ffffff26]
  to-transparent
  transform
  skew-x-[45deg]
  translate-x-0
  translate-y-0
  transition-all
  duration-[0.5s]
  blur-[0px];
}
.styled-btn:hover .styled-btn-content .before {
  @apply skew-x-[45deg] translate-x-[200px] translate-y-[200px];
}
.styled-btn-before {
  @apply absolute left-1/2 -translate-x-1/2 bottom-[-5px] w-[30px] h-[10px] bg-[#F00]
  rounded-[10px] transition-all duration-[0.5s];
}
.styled-btn:hover .styled-btn-before /*lightup button*/ {
  @apply bottom-0 h-1/2 w-[80%] rounded-[30px];
}
.styled-btn-after {
  @apply absolute left-1/2 -translate-x-1/2 top-[-5px] w-[30px] h-[1px] bg-[#f00] rounded-[10px] transition-all duration-[0.5s];
}
.styled-btn:hover .styled-btn-after /*lightup button*/ {
  @apply top-0 h-1/2 w-[80%] rounded-[30px];
}
$d: 2em;
$t: 0.3s;
$o: 0.125 * $d;
.styled-tab {
  --i: var(--light, 0);
  --not-i: calc(1 - var(--i));
  --j: var(--press, 0);
  --not-j: calc(1 - var(--j));
  z-index: var(--i);
  transform: scale(calc(1 - var(--j) * 0.02));
  box-shadow:
    calc(var(--not-j) *#{-$o}) calc(var(--not-j) *#{-$o}) #{$o} #fcfcfc06,
    calc(var(--not-j) *#{$o}) calc(var(--not-j) *#{$o}) #{$o} #d2dae606,
    inset calc(var(--j) *#{$o}) calc(var(--j) *#{$o}) #{$o} #d2dae606,
    inset calc(var(--j) *#{-$o}) calc(var(--j) *#{-$o}) #{$o} #fcfcfc06;
  transition:
    box-shadow $t,
    transform $t cubic-bezier(0.2, 4, 1, 3);
  &::after {
    filter: Contrast(0) Sepia(var(--i)) Hue-Rotate(calc(var(--hue) - 50deg)) Saturate(5) Opacity(calc(var(--i) + 0.21 * var(--not-i))) Drop-Shadow(1px 1px hsla(0, 0%, 100%, var(--not-i)));
    transition: filter $t;
    content: attr(data-ico);
  }
  &:hover,
  &:focus {
    --light: 1;
  }
  &:active {
    --press: 1;
  }
}
$hueStep: 90;
$delayStep: 0.115s;
.btn {
  .btn-content {
    position: relative;
    z-index: 2;
  }
  &__bg {
    @apply absolute left-1/2 top-1/2 w-full h-[0] block rounded-[50%];
    margin: -50% 0 0 -50%;
    padding-top: 100%;
    transform: scale(0);
    transform-origin: 50% 50%;
    transition: transform 0.175s cubic-bezier(0.5, 1, 0.89, 1);
    z-index: 1;
    @for $i from 1 through 4 {
      &:nth-of-type(#{$i}) {
        transition-delay: $delayStep / 2 * (4 - $i);
      }
    }
    .btn:focus & {
      transform: scale(1.5);
      transition: transform 0.35s cubic-bezier(0.11, 0, 0.5, 0);
      @for $i from 1 through 4 {
        &:nth-of-type(#{$i}) {
          transition-delay: $delayStep * $i;
        }
      }
    }
  }
}
